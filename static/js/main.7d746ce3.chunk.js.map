{"version":3,"sources":["util/Spotify.js","util/client.js","Components/SearchBar/SearchOptions/SearchOptions.js","Components/SearchBar/SearchBar.js","Components/Track/Track.js","Components/TrackList/TrackList.js","Components/SearchResults/SearchResults.js","Components/Playlist/Playlist.js","Components/App/App.js","index.js"],"names":["redirect","expiry","Spotify","login","window","location","getToken","token","url","href","includes","tokenStart","indexOf","length","tokenEnd","substring","expiryStart","expiryEnd","Number","setTimeout","search","term","option","tracks","fetch","headers","Authorization","then","response","ok","json","Error","console","log","items","map","track","id","name","artist","artists","album","uri","getUserId","userId","createNewPlaylist","playlistName","alert","method","body","JSON","stringify","data","playlistId","addTracksToPlaylist","array","uriString","join","listUrl","save","playlistURIs","SearchOptions","props","handleClick","target","setSearchOption","innerHTML","style","display","isLoggedIn","index","className","searchOption","onClick","SearchBar","placeholder","value","searchTerm","onChange","setSearchTerm","onKeyPress","event","key","Track","isRemoval","removeTrack","addTrack","TrackList","results","result","SearchResults","textTransform","Playlist","onSubmit","preventDefault","savePlaylist","updatePlaylistName","required","playlistTracks","type","App","useState","searchResults","setSearchResults","setPlaylistName","setPlaylistTracks","setIsLoggedIn","SetToken","a","uris","document","addEventListener","newToken","trackToAdd","find","trackToRemove","filter","newName","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.7d746ce3.chunk.js","sourcesContent":["import client from \"./client\";\r\nconst host = \"https://karlj38.github.io/jammming/\";\r\nconst redirect = `https://accounts.spotify.com/authorize?client_id=${client}&response_type=token&scope=playlist-modify-public&redirect_uri=${host}`;\r\n\r\n// let token = \"\";\r\nlet expiry = 0;\r\n\r\nlet Spotify = {\r\n  login() {\r\n    window.location = redirect;\r\n  },\r\n\r\n  getToken(token) {\r\n    if (token) {\r\n      return token;\r\n    }\r\n    let url = window.location.href;\r\n    if (url.includes(\"access_token\")) {\r\n      const tokenStart =\r\n        url.indexOf(\"access_token\") + \"access_token\".length + 1;\r\n      const tokenEnd = url.indexOf(\"&token_type\");\r\n      token = url.substring(tokenStart, tokenEnd);\r\n\r\n      const expiryStart = url.indexOf(\"expires_in\") + \"expires_in\".length + 1;\r\n      const expiryEnd = url.indexOf(\"&state\");\r\n      expiry = Number(url.substring(expiryStart, expiryEnd)) * 1000;\r\n\r\n      setTimeout(() => {\r\n        token = \"\";\r\n      }, expiry);\r\n      return token;\r\n    }\r\n  },\r\n\r\n  async search(term, option, token) {\r\n    if (!term || !token) {\r\n      return [];\r\n    }\r\n    let tracks = [];\r\n    await fetch(\r\n      `https://api.spotify.com/v1/search?type=track&q=${option}:${term}`,\r\n      {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      }\r\n    )\r\n      .then(\r\n        (response) => {\r\n          if (response.ok) {\r\n            return response.json();\r\n          } else {\r\n            throw new Error(\"req failed\");\r\n          }\r\n        },\r\n        () => console.log(\"network error\")\r\n      )\r\n      .then((json) => {\r\n        if (!json.tracks) {\r\n          return [];\r\n        }\r\n        tracks = json.tracks.items.map((track) => {\r\n          return {\r\n            id: track.id,\r\n            name: track.name,\r\n            artist: track.artists[0].name,\r\n            album: track.album.name,\r\n            uri: track.uri,\r\n          };\r\n        });\r\n      });\r\n    return tracks;\r\n  },\r\n\r\n  async getUserId(token) {\r\n    if (!token) {\r\n      return;\r\n    }\r\n    let userId = \"\";\r\n    let json = await fetch(\"https://api.spotify.com/v1/me\", {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    }).then(\r\n      (response) => {\r\n        if (response.ok) {\r\n          return response.json();\r\n        } else {\r\n          throw new Error(\"req failed\");\r\n        }\r\n      },\r\n      () => console.log(\"network error\")\r\n    );\r\n    userId = json.id;\r\n    return userId;\r\n  },\r\n\r\n  async createNewPlaylist(userId, playlistName, token) {\r\n    if (!userId || !playlistName || !token) {\r\n      alert(\"Invalid submission - No playlist name given\");\r\n      return;\r\n    }\r\n    let url = `https://api.spotify.com/v1/users/${userId}/playlists`;\r\n    let data = await fetch(url, {\r\n      method: \"POST\",\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n      body: JSON.stringify({ name: playlistName }),\r\n    }).then(\r\n      (response) => {\r\n        if (response.ok) {\r\n          return response.json();\r\n        } else {\r\n          throw new Error(\"req failed\");\r\n        }\r\n      },\r\n      () => console.log(\"network error\")\r\n    );\r\n    let playlistId = data.id;\r\n    return playlistId;\r\n  },\r\n\r\n  async addTracksToPlaylist(array, playlistId, token) {\r\n    if (!array || !playlistId || !token) {\r\n      alert(\"Invalid submission - No tracks in playlist\");\r\n      return;\r\n    }\r\n    let uriString = array.join(\",\");\r\n    let listUrl = `https://api.spotify.com/v1/playlists/${playlistId}/tracks?uris=${uriString}`;\r\n    await fetch(listUrl, {\r\n      method: \"POST\",\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    });\r\n  },\r\n\r\n  async save(playlistName, playlistURIs, token) {\r\n    if (!playlistName || !playlistURIs || !token) {\r\n      return;\r\n    } else {\r\n      const userId = await this.getUserId(token);\r\n      const playlistId = await this.createNewPlaylist(\r\n        userId,\r\n        playlistName,\r\n        token\r\n      );\r\n      this.addTracksToPlaylist(playlistURIs, playlistId, token);\r\n      console.log(\"done\");\r\n    }\r\n  },\r\n};\r\n\r\nexport default Spotify;\r\n","const client = \"f3920987d31f4b4e9261a062e26e13f1\";\r\n\r\nexport default client;\r\n","import React from \"react\";\r\nimport \"./SearchOptions.css\";\r\n\r\nfunction SearchOptions(props) {\r\n  const searchOptions = [\"album\", \"artist\", \"track\"];\r\n\r\n  function handleClick({ target }) {\r\n    props.setSearchOption(target.innerHTML);\r\n    props.search(target.innerHTML);\r\n  }\r\n\r\n  return (\r\n    <div style={{ display: props.isLoggedIn ? \"\" : \"none\" }}>\r\n      {searchOptions.map((option, index) => {\r\n        return (\r\n          <button\r\n            key={index}\r\n            className={\r\n              props.searchOption === option\r\n                ? \"SearchButton SearchOption active\"\r\n                : \"SearchButton SearchOption\"\r\n            }\r\n            onClick={handleClick}\r\n          >\r\n            {option}\r\n          </button>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SearchOptions;\r\n","import React from \"react\";\r\nimport Spotify from \"../../util/Spotify\";\r\nimport \"./SearchBar.css\";\r\nimport SearchOptions from \"./SearchOptions/SearchOptions\";\r\n\r\nfunction SearchBar(props) {\r\n  function handleChange({ target }) {\r\n    props.setSearchTerm(target.value);\r\n  }\r\n\r\n  function handleKey(event) {\r\n    if (event.key === \"Enter\") {\r\n      console.log(\"bar\", props.searchOption);\r\n      props.search(props.searchOption);\r\n    }\r\n  }\r\n\r\n  function login() {\r\n    Spotify.login();\r\n  }\r\n\r\n  return (\r\n    <div className=\"SearchBar\">\r\n      <input\r\n        placeholder=\"Enter A Song, Album, or Artist\"\r\n        value={props.searchTerm}\r\n        onChange={handleChange}\r\n        style={{ display: props.isLoggedIn ? \"\" : \"none\" }}\r\n        onKeyPress={handleKey}\r\n      />\r\n      <SearchOptions\r\n        searchOption={props.searchOption}\r\n        setSearchOption={props.setSearchOption}\r\n        isLoggedIn={props.isLoggedIn}\r\n        search={props.search}\r\n      />\r\n      {!props.isLoggedIn && (\r\n        <button className=\"SearchButton\" onClick={login}>\r\n          LOGIN\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SearchBar;\r\n","import React from \"react\";\r\nimport \"./Track.css\";\r\n\r\nfunction Track(props) {\r\n  function renderAction() {\r\n    return props.isRemoval ? \"-\" : \"+\";\r\n  }\r\n  // console.log(props);\r\n\r\n  function onAdd() {\r\n    props.addTrack(props.track);\r\n  }\r\n\r\n  function onRemove() {\r\n    props.removeTrack(props.track);\r\n  }\r\n\r\n  return (\r\n    <div className=\"Track\">\r\n      <div className=\"Track-information\">\r\n        <h3>{props.track.name}</h3>\r\n        <p>\r\n          {props.track.artist} | {props.track.album}\r\n        </p>\r\n      </div>\r\n      <button\r\n        className=\"Track-action\"\r\n        onClick={props.isRemoval ? onRemove : onAdd}\r\n      >\r\n        {renderAction()}\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Track;\r\n","import React from \"react\";\r\nimport \"./TrackList.css\";\r\nimport Track from \"../Track/Track\";\r\n\r\nfunction TrackList(props) {\r\n  // console.log(props);\r\n  return (\r\n    <div className=\"TrackList\">\r\n      {props.results.map((result) => (\r\n        <Track\r\n          track={result}\r\n          key={result.id}\r\n          addTrack={props.addTrack}\r\n          isRemoval={props.isRemoval}\r\n          removeTrack={props.removeTrack}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TrackList;\r\n","import React from \"react\";\r\nimport TrackList from \"../TrackList/TrackList\";\r\nimport \"./SearchResults.css\";\r\n\r\nfunction SearchResults(props) {\r\n  return (\r\n    <div className=\"SearchResults\">\r\n      <h2>\r\n        Search Results by{\" \"}\r\n        <span style={{ textTransform: \"capitalize\" }}>\r\n          {props.searchOption}\r\n        </span>\r\n      </h2>\r\n      <TrackList\r\n        results={props.results}\r\n        addTrack={props.addTrack}\r\n        isRemoval={false}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SearchResults;\r\n","import React from \"react\";\r\nimport TrackList from \"../TrackList/TrackList\";\r\nimport \"./Playlist.css\";\r\n\r\nfunction Playlist(props) {\r\n  function handleNameChange({ target }) {\r\n    props.updatePlaylistName(target.value);\r\n  }\r\n\r\n  function handleSubmit(event) {\r\n    event.preventDefault();\r\n    props.savePlaylist();\r\n  }\r\n\r\n  return (\r\n    <form className=\"Playlist\" onSubmit={handleSubmit}>\r\n      <input\r\n        placeholder=\"Enter Playlist Name\"\r\n        value={props.playlistName}\r\n        onChange={handleNameChange}\r\n        required={true}\r\n      />\r\n      <TrackList\r\n        results={props.playlistTracks}\r\n        removeTrack={props.removeTrack}\r\n        isRemoval={true}\r\n      />\r\n      <button\r\n        className=\"Playlist-save\"\r\n        style={{ display: props.playlistTracks.length ? \"\" : \"none\" }}\r\n        type=\"submit\"\r\n        // onClick={handleClick}\r\n      >\r\n        SAVE TO SPOTIFY\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default Playlist;\r\n","import React, { useState } from \"react\";\r\nimport SearchBar from \"../SearchBar/SearchBar\";\r\nimport SearchResults from \"../SearchResults/SearchResults\";\r\nimport Playlist from \"../Playlist/Playlist\";\r\nimport \"./App.css\";\r\nimport Spotify from \"../../util/Spotify\";\r\n\r\nfunction App() {\r\n  const [searchResults, setSearchResults] = useState([]);\r\n  const [playlistName, setPlaylistName] = useState(\"\");\r\n  const [playlistTracks, setPlaylistTracks] = useState([]);\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n  const [token, SetToken] = useState(\"\");\r\n  const [searchOption, setSearchOption] = useState(\"track\");\r\n\r\n  document.addEventListener(\"DOMContentLoaded\", () => {\r\n    let newToken = Spotify.getToken();\r\n    if (newToken) {\r\n      SetToken(newToken);\r\n      setIsLoggedIn(true);\r\n    }\r\n  });\r\n\r\n  function addTrack(trackToAdd) {\r\n    if (!playlistTracks.find((track) => track.id === trackToAdd.id)) {\r\n      setPlaylistTracks([...playlistTracks, trackToAdd]);\r\n    }\r\n  }\r\n\r\n  function removeTrack(trackToRemove) {\r\n    setPlaylistTracks(\r\n      playlistTracks.filter((track) => track.id !== trackToRemove.id)\r\n    );\r\n  }\r\n\r\n  function updatePlaylistName(newName) {\r\n    setPlaylistName(newName);\r\n  }\r\n\r\n  async function savePlaylist() {\r\n    const uris = playlistTracks.map((track) => track.uri);\r\n    await Spotify.save(playlistName, uris, token);\r\n    setPlaylistName(\"\");\r\n    setPlaylistTracks([]);\r\n    setSearchResults([]);\r\n    setSearchTerm(\"\");\r\n  }\r\n\r\n  async function search(option) {\r\n    const results = await Spotify.search(searchTerm, option, token);\r\n    setSearchResults(results);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>\r\n        Ja<span className=\"highlight\">mmm</span>ing\r\n      </h1>\r\n      <div className=\"App\">\r\n        <SearchBar\r\n          search={search}\r\n          searchTerm={searchTerm}\r\n          setSearchTerm={setSearchTerm}\r\n          isLoggedIn={isLoggedIn}\r\n          setIsLoggedIn={setIsLoggedIn}\r\n          Spotify={Spotify}\r\n          searchOption={searchOption}\r\n          setSearchOption={setSearchOption}\r\n        />\r\n        <div\r\n          className=\"App-playlist\"\r\n          style={{ display: searchResults.length ? \"\" : \"none\" }}\r\n        >\r\n          <SearchResults\r\n            results={searchResults}\r\n            addTrack={addTrack}\r\n            isLoggedIn={isLoggedIn}\r\n            searchOption={searchOption}\r\n          />\r\n          <Playlist\r\n            playlistName={playlistName}\r\n            playlistTracks={playlistTracks}\r\n            removeTrack={removeTrack}\r\n            updatePlaylistName={updatePlaylistName}\r\n            savePlaylist={savePlaylist}\r\n            isLoggedIn={isLoggedIn}\r\n            searchResults={SearchResults}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./reset.css\";\r\nimport \"./index.css\";\r\nimport App from \"./Components/App/App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}